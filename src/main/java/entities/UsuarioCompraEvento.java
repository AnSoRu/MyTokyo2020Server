package entities;
// Generated 14-nov-2017 11:46:19 by Hibernate Tools 5.2.6.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UsuarioCompraEvento generated by hbm2java
 */
@Entity
@Table(name = "Usuario_compra_Evento", catalog = "mytokyo2020")
public class UsuarioCompraEvento implements java.io.Serializable {

	private UsuarioCompraEventoId id;
	private Evento evento;
	private Usuario usuario;
	private Float precio;
	private Date fechaDeCompra;
	private Date lastModification;

	public UsuarioCompraEvento() {
	}

	public UsuarioCompraEvento(UsuarioCompraEventoId id, Evento evento, Usuario usuario, Date lastModification) {
		this.id = id;
		this.evento = evento;
		this.usuario = usuario;
		this.lastModification = lastModification;
	}

	public UsuarioCompraEvento(UsuarioCompraEventoId id, Evento evento, Usuario usuario, Float precio,
			Date fechaDeCompra, Date lastModification) {
		this.id = id;
		this.evento = evento;
		this.usuario = usuario;
		this.precio = precio;
		this.fechaDeCompra = fechaDeCompra;
		this.lastModification = lastModification;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "usuarioUsername", column = @Column(name = "Usuario_Username", nullable = false, length = 10)),
			@AttributeOverride(name = "eventoIdEvento", column = @Column(name = "Evento_idEvento", nullable = false)) })
	public UsuarioCompraEventoId getId() {
		return this.id;
	}

	public void setId(UsuarioCompraEventoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Evento_idEvento", nullable = false, insertable = false, updatable = false)
	public Evento getEvento() {
		return this.evento;
	}

	public void setEvento(Evento evento) {
		this.evento = evento;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Usuario_Username", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "Precio", precision = 12, scale = 0)
	public Float getPrecio() {
		return this.precio;
	}

	public void setPrecio(Float precio) {
		this.precio = precio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_de_Compra", length = 0)
	public Date getFechaDeCompra() {
		return this.fechaDeCompra;
	}

	public void setFechaDeCompra(Date fechaDeCompra) {
		this.fechaDeCompra = fechaDeCompra;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastModification", nullable = false, length = 0)
	public Date getLastModification() {
		return this.lastModification;
	}

	public void setLastModification(Date lastModification) {
		this.lastModification = lastModification;
	}

}
